<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_generate</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="6" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.gender_chosen="male"
{global.api_gender="gender=male&amp;"}

if global.gender_chosen="female"
{global.api_gender="gender=female&amp;"}

if global.gender_chosen=""
{global.api_gender=""}

if global.chosen_region!=""
{global.api_region=("region=")}

if global.chosen_region=""
{global.api_region=("")}
if os_is_network_connected()=true{
http_get("http://uinames.com/api/?"+global.api_gender+global.api_region+global.chosen_region+global.api_minlen+global.api_maxlen)}

if os_is_network_connected()=false{
ini_open(working_directory +'offlinenames.ini')
var random_person=irandom_range(1,10)
global.name=ini_read_string("person"+string(random_person),'name',"")
global.surname=ini_read_string("person"+string(random_person),'surname',"")
global.gender=ini_read_string("person"+string(random_person),'gender',"")
global.region=ini_read_string("person"+string(random_person),'region',"")
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="62">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var json = async_load[? "result"]

var map = json_decode(json)
if (map == -1)
{show_message("Result invalid");exit;}

if (ds_map_exists(map, "name"))
{global.name = map [? "name"] 
global.surname = map [? "surname"]
global.gender = map [? "gender"]
global.region = map [? "region"]
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.api_gender=""
global.api_region=""
global.api_minlen=""
global.api_maxlen=""
global.name=""
global.surname=""
global.gender=""
global.region=""
global.chosen_region=""
global.gender_chosen=""


</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
